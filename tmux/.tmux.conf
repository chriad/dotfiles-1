#  Tmux Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'tmux-plugins/tmux-continuum'

set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green

# Status line
set -g status-interval 1
set -g status-justify centre
set -g status-left-length 20
set -g status-right-length 140
tm_tunes="#[fg=$tm_color_music]#(osascript -l JavaScript ~/bin/music.js)"
tm_session_name="$tm_icon #S"
tm_battery="#(pmset -g batt | grep InternalBattery | awk '{print $3}' | sed 's:..$::g')"
set -g status-left '#[fg=black,bg=green] meain #[fg=green,bg=black]'$tm_session_name' #[fg=black]'
set -g status-right '#[fg=red,dim,bg=default] '$tm_tunes' #[fg=white,dim,bg=black] '$tm_battery' #[fg=black,bg=white] %a %l:%M #[fg=black,bg=blue] %d %b #[default]'

# binding stuff
unbind C-b
set-option -g prefix M-f
# bind-key M-f send-prefix

# split
bind -n M-v split-window -h
bind -n M-b split-window -v

# n and p to switch windows
bind -n M-p previous-window
bind -n M-n next-window

# switch windows meta+number
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9

# Break pane and move to new window
bind ` break-pane

# Swap pane
bind > swap-pane -D  # swap current pane with the next one
bind < swap-pane -U  # swap current pane with the previous one

# Change window order
bind-key -n M-Left swap-window -t -1
bind-key -n M-Right swap-window -t +1

# Zoom pane
bind f resize-pane -Z

# Go to previous pane
bind-key M-f last-window

# Kill tmux session
bind 0 kill-session

# Enable mouse input
set -g mouse on

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Tmux configuration reloaded."

# color
set -g default-terminal "screen-256color"

# Seamless trasition between vim and tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

# source all tmux plugins
run '~/.tmux/plugins/tpm/tpm'
